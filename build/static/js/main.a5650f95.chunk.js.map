{"version":3,"sources":["assets/fritz.jpg","assets/displacement/noise.png","assets/resume.pdf","shaders/perlin.js","components/core/Mobile.js","components/core/Link.js","components/core/Text.js","components/Texture.js","components/Header.js","components/Splash.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","perlin","transparent","uniforms","effectFactor","type","value","dispFactor","speed","time","texture","undefined","disp","vertexShader","fragmentShader","Desktop","_ref","children","react_default","a","createElement","react_responsive_default","minDeviceWidth","Link","styled","_templateObject","Head","h2","Text_templateObject","Text","div","_templateObject2","Mini","_templateObject3","heightDiff","window","innerHeight","widthDiff","innerWidth","InitImage","url","_useMemo","useMemo","loader","THREE","load","_useMemo2","Object","slicedToArray","noise","canvas","useThree","height","Math","max","width","style","name","args","uniforms-texture-value","uniforms-disp-value","Scene","group","useRef","useRender","current","material","ref","Texture_InitImage","img","Texture","_useState","useState","_useState2","setDimensions","useEffect","handleResize","addEventListener","removeEventListener","Mobile_Desktop","dist","className","Texture_Scene","Header","Splash","href","resume","App","Texture_Texture","ReactDOM","render","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+LCAlCC,EAAS,CACbC,aAAa,EACbC,SAAU,CACRC,aAAc,CAAEC,KAAM,IAAKC,MAAO,MAClCC,WAAY,CAAEF,KAAM,IAAKC,MAAO,GAChCE,MAAO,CAAEH,KAAM,IAAKC,MAAO,IAC3BG,KAAM,CAAEJ,KAAM,IAAKC,MAAO,GAC1BI,QAAS,CAAEL,KAAM,IAAKC,WAAOK,GAC7BC,KAAM,CAAEP,KAAM,IAAKC,WAAOK,IAE5BE,aAAY,0JAOZC,eAAc,4hBCZHC,EAAU,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAF,OAAgBC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYG,eAFhC,MAE6DL,8GCHzE,IAAMM,EAAOC,IAAOL,EAAVM,+xCCAV,IAAMC,EAAOF,IAAOG,GAAVC,KA4BJC,EAAOL,IAAOM,IAAVC,KAsBJC,EAAOR,IAAOxB,EAAViC,KC5CbC,EAAaC,OAAOC,YAAc,IAClCC,EAAYF,OAAOG,WAAa,KAE9BC,EAAY,SAAAvB,GAAiB,IAAfwB,EAAexB,EAAfwB,IAAK5B,EAAUI,EAAVJ,KAAU6B,EACRC,kBACvB,WACE,IAAMC,EAAS,IAAIC,gBACnB,MAAO,CAACD,EAAOE,KAAKL,GAAMG,EAAOE,KAAKjC,KAExC,CAAC4B,EAAK5B,IANyBkC,EAAAC,OAAAC,EAAA,EAAAD,CAAAN,EAAA,GAC1B/B,EAD0BoC,EAAA,GACjBG,EADiBH,EAAA,GAQzBI,EAAWC,cAAXD,OAIR,OAHAA,EAAOE,OAASC,KAAKC,IAAI,IAAK,IAAMpB,GACpCgB,EAAOK,MAAQF,KAAKC,IAAI,IAAK,IAAMjB,GACnCa,EAAOM,MAAQ,6BAEbtC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,uBAAqBqC,KAAK,WAAWC,KAAM,CAAC,EAAG,KAC7CxC,EAAAC,EAAAC,cAAA,kBACEqC,KAAK,WACLC,KAAM,CAACzD,GACP0D,yBAAwBjD,EACxBkD,sBAAqBX,MAMzBY,EAAQ,WACZ,IAAIC,EAAQC,mBAEZ,OADAC,YAAU,kBAAMF,EAAMG,QAAQhD,SAAS,GAAGiD,SAAS/D,SAAnC,KAAoDG,OAAS,MAE3EY,EAAAC,EAAAC,cAAA,SAAO+C,IAAKL,GACV5C,EAAAC,EAAAC,cAACgD,EAAD,CAAW5B,IAAK6B,IAAKzD,KAAMA,QAKpB0D,EAAU,WAAM,IAAAC,EACSC,mBAAS,CAC3CjB,MAAOpB,OAAOG,WACdc,OAAQjB,OAAOC,cAHUqC,EAAA1B,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GACRG,GADQD,EAAA,GAAAA,EAAA,IAe3B,OAVAE,oBAAU,WACR,IAAMC,EAAe,WACnBF,EAAc,CACZnB,MAAOpB,OAAOG,WACdc,OAAQjB,OAAOC,eAInB,OADAD,OAAO0C,iBAAiB,SAAUD,GAC3B,WAAQzC,OAAO2C,oBAAoB,SAAUF,KACnD,IAED1D,EAAAC,EAAAC,cAAC2D,EAAD,KACE7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQC,UAAU,UAChB/D,EAAAC,EAAAC,cAAC8D,EAAD,SC7DKC,EACTjE,EAAAC,EAAAC,cAACM,EAAD,qCCKS0D,EACTlE,EAAAC,EAAAC,cAACS,EAAD,KACIX,EAAAC,EAAAC,cAAA,SALM,kKAMNF,EAAAC,EAAAC,cAACY,EAAD,2CACAd,EAAAC,EAAAC,cAACY,EAAD,cAAYd,EAAAC,EAAAC,cAACG,EAAD,CAAM8D,KAAMC,KAAZ,UCKLC,SAdH,WACV,OACErE,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,QACb/D,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,UACZE,EACAC,GAEHlE,EAAAC,EAAAC,cAAA,OAAK6D,UAAU,WACb/D,EAAAC,EAAAC,cAACoE,EAAD,UCRRC,IAASC,OAAOxE,EAAAC,EAAAC,cAACuE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.a5650f95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fritz.a16aeb27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noise.f0dba644.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.5cf65fa8.pdf\";","const perlin = {\n  transparent: true,\n  uniforms: {\n    effectFactor: { type: 'f', value: 0.075 },\n    dispFactor: { type: 'f', value: 0 },\n    speed: { type: 'f', value: 0.5 },\n    time: { type: 'f', value: 0 },\n    texture: { type: 't', value: undefined },\n    disp: { type: 't', value: undefined }\n  },\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    uniform sampler2D texture;\n    uniform sampler2D disp;\n    uniform float dispFactor;\n    uniform float effectFactor;\n    uniform float speed;\n    uniform float time;\n\n    void main() {\n      vec2 uv = vUv;\n      vec4 disp = texture2D(disp, uv);\n      disp -= 0.6;\n\n      disp.xy *= cos(uv.y * 85. + speed * time) * effectFactor;\n\n      vec2 shift = vec2(uv.x - disp.x, uv.y - disp.y);\n      gl_FragColor = texture2D(texture, shift);\n    }\n`\n}\n\nexport { perlin }\n","import React from 'react';\nimport MediaQuery from 'react-responsive';\n\nconst breakPoint = 1224;\n\nexport const Desktop = ({children}) => <MediaQuery minDeviceWidth={breakPoint}>{children}</MediaQuery>;","import styled from 'styled-components';\n\nexport const Link = styled.a`\n    color: inherit;\n`","import styled from 'styled-components';\n\nexport const Head = styled.h2`\n    font-family: 'EB Garamond', sans-serif;\n    opacity: 0.9;\n    font-weight: 100;\n    letter-spacing: 1.2px;\n    font-size: 48px;\n    padding-left: 0.65em;\n    padding-top: 1em;\n\n    @media screen and (max-width: 599px) {\n        padding-top: 3em;\n        font-size: 36px;\n    }\n\n    @media screen and (min-width: 600px) {\n        padding-top: 8em;\n    }\n\n    @media screen and (min-width: 1200px) {\n        padding-left: 1.3em;\n        padding-top: 5em;\n    }\n\n    @media screen and (min-width: 1800px) {\n        padding-top: 8em;\n    }\n`\n\nexport const Text = styled.div`\n    font-weight: 100;\n    padding-left: 1.9em;\n    padding-top: 0em;\n\n    @media screen and (max-width: 599px) {\n        font-size: 12px;\n        width: 70%;\n    }\n\n    @media screen and (min-width: 600px) {\n        padding-left: 2em;\n        width: 50%;\n    }\n\n    @media screen and (min-width: 1200px) {\n        padding-left: 4em;\n        padding-top: 0em;\n        width: 45%;\n    }\n`\n\nexport const Mini = styled.p`\n    font-size: 12px;\n    line-height: 0.7;\n\n    @media screen and (max-width: 599px) {\n        font-size: 10px;\n    }\n`\n\n","import * as THREE from 'three'\nimport React, { useMemo, useRef, useState, useEffect } from 'react'\nimport { Canvas, useRender, useThree } from 'react-three-fiber'\nimport { perlin } from '../shaders/perlin'\nimport img from '../assets/fritz.jpg'\nimport disp from '../assets/displacement/noise.png'\nimport { Desktop } from './core/Index'\n\nlet heightDiff = window.innerHeight - 900;\nlet widthDiff = window.innerWidth - 1500;\n\nconst InitImage = ({url, disp}) => {\n  const [texture, noise] = useMemo(\n    () => {\n      const loader = new THREE.TextureLoader()\n      return [loader.load(url), loader.load(disp)]\n    },\n    [url, disp]\n  );\n  const { canvas } = useThree();\n  canvas.height = Math.max(900, 900 + heightDiff);\n  canvas.width = Math.max(750, 750 + widthDiff);\n  canvas.style = \"width: 100%; height: 100%;\";\n  return (\n    <mesh>\n      <planeBufferGeometry name=\"geometry\" args={[8, 8]} />\n        <shaderMaterial\n          name=\"material\"\n          args={[perlin]}\n          uniforms-texture-value={texture}\n          uniforms-disp-value={noise}\n        />\n    </mesh>\n  )\n};\n\nconst Scene = () => {\n  let group = useRef();\n  useRender(() => group.current.children[0].material.uniforms['time'].value += 0.02);\n  return (\n    <group ref={group}>\n      <InitImage url={img} disp={disp} />\n    </group>\n  );\n}\n\nexport const Texture = () => {\n  const [dimensions, setDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return () => { window.removeEventListener('resize', handleResize) }\n  }, []);\n  return (\n    <Desktop>\n      <Canvas className=\"canvas\">\n        <Scene />\n      </Canvas>\n    </Desktop>\n  );\n};\n\n/*class Texture extends Component {\n\n  constructor(props) {\n    super(props);\n    this.resize = this.resize.bind(this);\n  }\n\n  resize() {\n    const { canvas, camera, renderer } = useThree();\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize( window.innerWidth, window.innerHeight );\n    canvas.height = Math.max(900, 900 + heightDiff);\n    canvas.width = Math.max(750, 750 + widthDiff);\n  }\n\n  render() {\n    return (\n    <Desktop>\n      <Canvas className=\"canvas\">\n        <Scene />\n      </Canvas>\n    </Desktop>\n    );\n  }\n\n}\n\nexport { Texture };*/","import React from 'react';\nimport { Head } from './core/Index';\n\nexport const Header = (\n    <Head>alan nguyen</Head>\n);","import React from 'react';\nimport resume from '../assets/resume.pdf';\nimport { Text, Mini, Link } from './core/Index';\n\n// this is text for the splash page.\n\nconst blurb = \"currently a fourth year student at UC Berkeley studying computer science. \" +  \n\"interests lie heavily within design, digital media, security, and computer graphics.\"\n\nexport const Splash = (\n    <Text>\n        <p>{blurb}</p>\n        <Mini>previously >> akamai, fox networks</Mini>\n        <Mini>cv >> <Link href={resume}>here</Link></Mini>\n    </Text>\n);","import React from 'react'\nimport { Header, Splash, Texture } from './components/Index'\nimport './layout/styles.scss'\n\nconst App = () => {\n  return (\n    <div className=\"main\">\n      <div className=\"splash\">\n        {Header}\n        {Splash}\n      </div>\n      <div className=\"display\">\n        <Texture/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}